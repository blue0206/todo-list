/* CSS RESET */
*, *::before, *::after {
    box-sizing: border-box;
}
* {
    margin: 0;
}
body {
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;
}
img, picture, video, canvas, svg {
    display: block;
    max-width: 100%;
}
input, button, textarea, select {
    font: inherit;
}
button {
    background: none;
    border: none;
    cursor: pointer;
}
p, h1, h2, h3, h4, h5, h6 {
    overflow-wrap: break-word;
}
#root, #__next {
    isolation: isolate;
}

/* Fonts */
@font-face {
    font-family: 'roboto';
    src:
        url("./assets/fonts/roboto-regular-webfont.woff2") format("woff2"),
        url("./assets/fonts/roboto-regular-webfont.woff") format("woff");
    font-weight: 400;
    font-style: normal;
}

@font-face {
    font-family: 'roboto';
    src:
        url("./assets/fonts/roboto-bold-webfont.woff2") format("woff2"),
        url("assets/fonts/roboto-bold-webfont.woff") format("woff");
    font-weight: 800;
    font-style: normal;
}

@font-face {
    font-family: 'roboto';
    src:
        url("./assets/fonts/roboto-thin-webfont.woff2") format("woff2"),
        url("./assets/fonts/roboto-thin-webfont.woff") format("woff");
    font-weight: 200;
    font-style: normal;
}

/* Setting up variables */
:root {
    --maximum-priority: hsl(0, 100%, 50%);
    --high-priority: hsl(39, 100%, 50%);
    --medium-priority: hsl(60, 41%, 54%);
    --low-priority: hsl(172, 41%, 59%);
    --minimum-priority: hsl(120, 75%, 45%);
}

/* Main Grid */
body {
    font-family: 'roboto', system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', 
                Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    font-size: 1.2rem;

    display: grid;
    grid-template: 1fr / auto 1fr;
    grid-template-areas: 'sidebar main';

    min-height: 100vh;
    min-height: 100dvh;
}

main {
    grid-area: main;
}

aside {
    grid-area: sidebar;
}

/* Dashboard Open/Close Button */
main {
    position: relative;
}

#sidebar-btn {
    position: absolute;
    z-index: 2;
    top: 2px;
    left: 11px;

    appearance: none;
    height: 2.8em;
    aspect-ratio: 1 / 1;
    border: 2px solid white;
    border-radius: 100%;
    cursor: pointer;

    background-image: url("./assets/icons/close.svg");
    background-size: 2.3em;
    background-position: center;
    background-repeat: no-repeat;
    filter: invert(100%);
}

#sidebar-btn:hover {
    border: none;
    background-color: red;
    filter: invert(0%);
}

#sidebar-btn:hover::before {
    content: " ";
    position: absolute;
    top: 50%;
    right: 95%;
    margin-top: -11px;
    border-width: 11px;
    border-style: solid;
    border-color: transparent hsl(0, 100%, 50%) transparent transparent;
}

#sidebar-btn:checked:hover {
    background-color: hsl(209, 76%, 48%);
    filter: invert(0%);
}

#sidebar-btn:checked:hover::before {
    left: 95%;
    border-color: transparent transparent transparent hsl(209, 76%, 48%);
}

#sidebar-btn:checked {
    background-image: url("./assets/icons/left-panel-open.svg");
    filter: invert(100%);
}

main:has(> .sidebar-toggle > #sidebar-btn:checked) + aside {
    visibility: hidden;
    position: absolute;
}

/* Sidebar Styling */
aside {
    background-color: hsl(199, 89%, 48%);

    display: flex;
    flex-direction: column;
    gap: 25px;

    padding-top: 25px;
    max-width: 320px;
    font-size: 1.25rem;
    font-weight: 800;

    box-shadow: 2.7px 5.3px 14.4px rgba(0, 0, 0, 0.34),
                11px 22px 85px rgba(0, 0, 0, 0.16);
}

aside .heading {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 11px;

    margin-bottom: 25px;
    padding-inline: 25px;

    font-size: 1.8rem;
    color: hsl(0, 0%, 100%);
}

aside .heading > img {
    height: 2em;
    aspect-ratio: 1 / 1;

    filter: invert(100%);
}

aside button {
    display: flex;
    align-items: center;
    gap: 11px;

    color: hsl(0, 0%, 100%);

    padding-left: 25px;
}

aside .tabs > button:hover,
aside .project-tabs > button:hover {
    background-color: hsl(199, 88%, 22%);
}

aside button > img {
    height: 1.5em;
    aspect-ratio: 1 / 1;
}

aside .tabs {
    display: flex;
    flex-direction: column;
    gap: 11px;
}

.tabs .home > img {
    filter: invert(100%);
}

.project-tabs {
    display: flex;
    flex-direction: column;
    gap: 11px;

    max-height: 58vh;
    overflow: auto;
}

/* Sidebar project list scrollbar */
@supports selector(::-webkit-scrollbar) {
    .project-tabs::-webkit-scrollbar {
        width: 4px;
    }

    .project-tabs::-webkit-scrollbar-track {
        background-color: hsl(0, 0%, 0%);
        border-radius: 100vh;
    }

    .project-tabs::-webkit-scrollbar-thumb {
        background-color: hsl(0, 0%, 100%);
        border-radius: 100vh;
    }
}

.project-tabs > *:not(.my-projects) {
    padding-left: 32px;
    font-weight: 400;
}

.project-li {
    display: flex;
    justify-content: space-between;
}

.project-li::before {
    content: url("./assets/icons/hashtag.svg");
    font-size: 1.5em;
}

.project-li:hover {
    background-color: hsl(199, 88%, 22%);
}

.project-li > .project-item {
    text-overflow: ellipsis;
    overflow: clip;
    max-width: 45%;
}

.project-btns {
    display: flex;
    justify-content: flex-end;
    gap: 5px;

    height: 2em;
}

.project-btns > .edit-project {
    background-image: url("./assets/icons/edit.svg");
    background-size: 1.5em;
    background-position: center;
}

.project-btns > .delete-project {
    background-image: url("./assets/icons/delete.svg");
    background-size: 1.5em;
    background-position: center;
}

.project-btns > * {
    background-size: 58%;
    background-position: center;
    background-repeat: no-repeat;

    height: 100%;
    aspect-ratio: 1 / 1;
}

.project-btns > .edit-project:hover,
.project-btns > .delete-project:hover {
    background-color: hsl(198, 23%, 45%);
}

/* Home page */
main > .home {
    height: 100%;

    display: grid;
    grid-template: auto 1fr / 1fr;
    grid-template-areas: 'header' 'main';
}

.home-header {
    grid-area: header;
    
    display: flex;
    justify-content: center;

    padding-top: 38px;
    
    font-size: 1.5rem;

    box-shadow: 2.7px 5.3px 14.4px rgba(0, 0, 0, 0.34),
                11px 22px 85px rgba(0, 0, 0, 0.16);
    z-index: 1;
}

.home-main {
    grid-area: main;

    padding-top: 38px;

    background-color: hsl(214, 32%, 91%);

    display: grid;
    grid-template: auto auto 1fr / 2fr 1fr;
    grid-template-areas: 'task project' 'task priority' 'task .';
    gap: 35px;
}

.home-task {
    grid-area: task;

    padding-left: 35px;
    padding-bottom: 35px;

    display: flex;
    flex-direction: column;
    gap: 11px;
}

/* Home page task section */
.task-cards {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
    gap: 35px;
}

.task-card {
    display: grid;
    grid-template-columns: 11px 1fr;

    border-radius: 16px;
    background-color: hsl(0, 0%, 100%);

    box-shadow: 6.4px 12.8px 12.5px rgba(0, 0, 0, 0.16),
                58px 116px 85px rgba(0, 0, 0, 0.075);
}

.sideline {
    border-top-left-radius: 16px;
    border-bottom-left-radius: 16px;
}

.card-content {
    display: grid;
    grid-template-rows: auto 1fr auto auto;

    padding: 11px;
}

.card-content > .task-name {
    font-weight: 800;
    text-align: start;

    overflow: hidden;
    max-height: calc(1em * 1.5);

    padding: 0px;
}

.card-content > .task-description {
    /* Prevent showing more than 8 lines */
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 8;

    font-size: 1rem;
    color: hsl(0, 0%, 48%);
}

.card-content > .task-due-date {
    font-size: 1rem;
}

.card-content > .card-btns {
    display: flex;
    justify-content: flex-end;
    align-items: end;
    gap: 8px;

    filter: invert(100%);
}

.card-content > .card-btns > *:hover {
    background-color: hsl(0, 0%, 0%);
    border-radius: 16px;
    padding-block: 5px;
    filter: invert(100%);
}

.home-prompt {
    width: fit-content;
    padding-inline: 5px;
    margin-top: 16px;
    margin-left: 16px;
    border-radius: 4px;
    font-size: 1rem;

    color: hsl(0, 0%, 100%);
    background-color: hsl(0, 0%, 0%);
}

/* Home page project section */
.home-project {
    grid-area: project;

    padding-right: 35px;

    display: flex;
    flex-direction: column;
    gap: 11px;
}

.home-project-list {
    display: grid;
    place-items: start;
    gap: 32px;

    padding: 32px 38px;
    /* Set height equivalent to 16 lines of text */
    height: calc(16 * 1em * 1.5);

    overflow: auto;
    scrollbar-width: auto;
    
    background-color: hsl(0, 0%, 100%);

    border-bottom-left-radius: 25px;
    border-top-left-radius: 25px;

    box-shadow: 6.4px 12.8px 12.5px rgba(0, 0, 0, 0.16),
                58px 116px 85px rgba(0, 0, 0, 0.075);
}

.home-project-list > .home-prompt, .priority-task-list > .home-prompt {
    align-self: center;
    justify-self: center;

    margin-bottom: 35px;
}

.home-project-item {
    display: flex;
    flex-direction: column;
    gap: 5px;

    font-size: 1rem;
}

.home-project-item > div {
    font-size: 0.85rem;
    color: hsl(0, 0%, 48%);
}

.outline:not(.outline:last-child) {
    height: 2px;
    width: 100%;

    background-color: hsl(213, 27%, 84%);
}

/* Home page priority-task section */
.home-priority-tasks {
    grid-area: priority;

    padding-bottom: 35px;
    padding-right: 35px;

    display: flex;
    flex-direction: column;
    gap: 11px;
}

.priority-task-list {
    display: grid;
    place-items: start;
    gap: 16px;

    padding: 32px 16px;
    /* Set height equivalent to 18 lines of text */
    height: calc(18 * 1em * 1.5);

    overflow: auto;
    scrollbar-width: auto;
    
    background-color: hsl(0, 0%, 100%);

    border-bottom-left-radius: 25px;
    border-top-left-radius: 25px;

    box-shadow: 6.4px 12.8px 12.5px rgba(0, 0, 0, 0.16),
                58px 116px 85px rgba(0, 0, 0, 0.075);
}

/* Custom scrollbar for project section and priority task section */
@supports selector(::-webkit-scrollbar) {
    .priority-task-list, .home-project-list {
        border-radius: 25px;
        scrollbar-width: unset;
    }

    .priority-task-list::-webkit-scrollbar,
    .home-project-list::-webkit-scrollbar {
        width: 5px;
    }
    
    .priority-task-list::-webkit-scrollbar-track,
    .home-project-list::-webkit-scrollbar-track {
        margin-block: 25px;
        border-radius: 25px;
        background-color: hsla(0, 0%, 0%, 0.116);
    }
    
    .priority-task-list::-webkit-scrollbar-thumb,
    .home-project-list::-webkit-scrollbar-thumb {
        border-radius: 25px;
        background-color: hsl(0, 0%, 0%);
    }
}

.priority-task-list .priority-task {
    display: flex;
    flex-direction: column;
    gap: 5px;
}

.priority-task-name {
    font-size: 1rem;
    text-align: justify;

    /* Limit text display within one line */
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 1;
}

.priority-task-content {
    display: flex;
    flex-direction: column;
    align-items: flex-start;

    color: hsl(0, 0%, 48%);
    font-size: 0.85rem;
}

.priority-task-content > div:last-child {
    font-size: 0.8rem;
    text-align: justify;

    /* Limit text display within two lines */
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
}

.maximum, option[value="Maximum"] {
    background-color: var(--maximum-priority);
}

.high, option[value="High"] {
    background-color: var(--high-priority);
}

.medium, option[value="Medium"] {
    background-color: var(--medium-priority);
}

.low, option[value="Low"] {
    background-color: var(--low-priority);
}

.minimum, option[value="Minimum"] {
    background-color: var(--minimum-priority);
}

.project-container {
    height: 100%;

    display: grid;
    grid-template: auto 1fr / 1fr;
    grid-template-areas: 'project-header' 'project-main';
}

.project-container img {
    filter: invert(100%);
}

.project-heading {
    grid-area: project-header;
    
    display: flex;
    justify-content: flex-start;
    gap: 16px;

    padding-top: 38px;
    padding-left: 11%;
    
    font-size: 1.5rem;

    box-shadow: 2.7px 5.3px 14.4px rgba(0, 0, 0, 0.34),
                11px 22px 85px rgba(0, 0, 0, 0.16);
    z-index: 1;
}

.project-heading > button {
    height: 1.8em;
    aspect-ratio: 1 / 1;
    border-radius: 16px;
    align-self: center;
}

.project-heading img {
    height: 1.5em;
    aspect-ratio: 1 / 1;
}

.project-heading > .edit-project {
    margin-left: 38px;
}

.project-heading > button:hover {
    background-color: white;
    filter: invert(100%);;
}

.project-task-list {
    grid-area: project-main;
    list-style: none;

    padding: 38px;
    background-color: hsl(214, 32%, 91%);

    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;
    gap: 25px;
}

.project-task-list > .add-task {
    display: flex;
    align-items: center;
    gap: 11px;
}

.project-task {
    width: 100%;

    display: grid;
    grid-template-columns: auto 1fr;
    grid-template-areas: 'checkbox task';
    gap: 11px;
}

.task-complete {
    grid-area: checkbox;
    
    /* Style checkbox from scratch */
    appearance: none;
    margin: 11px 0 0 0;
    
    font: inherit;
    color: hsl(234, 100%, 27%);
    height: calc(1em * 1.5);
    width: calc(1em * 1.5);
    border: 0.2em solid currentColor;
    border-radius: 0.35em;

    /* Center the ::before content */
    display: grid;
    place-content: center;
}

.task-complete::before {
    content: "";
    width: 0.8em;
    height: 0.8em;
    transform: scale(0);
    transition: 120ms transform ease-in-out;
    box-shadow: inset 1.25em 1.25em black;

    transform-origin: bottom left;
    clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
}

.task-complete:checked::before {
    transform: scale(1);
}

.task-complete:focus {
    outline: max(2px, 0.2em) solid currentColor;
    outline-offset: max(2px, 0.2em);
}

.project-task-container {
    grid-area: task;

    background-color: hsl(0, 0%, 100%);
    box-shadow: 6.4px 12.8px 12.5px rgba(0, 0, 0, 0.16),
                58px 116px 85px rgba(0, 0, 0, 0.075);

    display: grid;
    grid-template-columns: 11px 1fr auto;
    gap: 4px;

    border-radius: 16px;

    /* Restrict container dimensions */
    overflow: hidden;
    max-height: calc(2.6 * 1em * 1.5);
    position: relative;
}

.expand-collapse {
    /* Create expand-collapse button to fully display or hide task info */
    position: absolute;
    place-self: end center;

    appearance: none;
    cursor: pointer;

    /* Display expand button when unchecked (Default state) */
    background-image: url("./assets/icons/expand.svg");
    background-repeat: no-repeat;
    background-size: contain;
    background-position: center;
    height: 1.5em;
    aspect-ratio: 1 / 1;
    border-radius: 100%;
    filter: invert(100%);
}

.expand-collapse:checked {
    /* Display collapse button when checked */
    background-image: url("./assets/icons/collapse.svg");
}

.expand-collapse:hover {
    background-color: rgb(0, 0, 0);
    filter: invert(0);
}

.project-task-container:has(> .expand-collapse:not(:checked))::before {
    /* Blur text when display is collapsed */
    content: "";
    position: absolute;
    height: calc(2 * 1em * 1.5);
    width: 100%;
    bottom: 0;
    pointer-events: none;
    background: linear-gradient(to bottom, transparent, white);
}

.project-task-container:has(> .expand-collapse:checked) {
    /* Display full task container by removing max-height restriction */
    max-height: none;
}

.project-task-container > .task {
    place-self: start;
    text-align: start;

    display: flex;
    flex-direction: column;
    gap: 4px;

    padding-bottom: 11px;
    padding-right: 8px;
}

.project-task-container > .task > div:first-child {
    font-weight: 800;
}

.project-task-container > .task > div:last-child {
    font-size: 1rem;
}

.task-complete:checked + .project-task-container .task > * {
    /* Strikethrough task name & description if task checked complete */
    text-decoration: line-through double hsl(0, 0%, 0%) from-font;
}

.project-task-container > .task-utility {
    display: flex;
    flex-direction: column;
    gap: 11px;

    padding-bottom: 11px;
    padding-right: 25px;
}

.task-utility > *:not(:first-child) {
    display: flex;
    flex-direction: column;
}

.task-utility > div:first-child {
    display: flex;
    gap: 8px;
    margin-bottom: 25px;
    padding-top: 5px;
}

.task-utility > div:first-child > button:hover {
    background-color: white;
    padding-block: 2px;
    border-radius: 25px;
    filter: invert(100%);
}

.task-utility-heading {
    font-weight: 800;
}

.task-utility-heading + div:has(img) {
    display: flex;
    align-items: center;
    gap: 4px;
}

.task-utility > *:not(:first-child) img {
    filter: invert(0%);

    height: 1em;
    aspect-ratio: 1 / 1;
}

.task-complete:checked 
+ .project-task-container .task-utility 
> div:nth-child(even):not(:last-child) 
> div:last-child {
    /* Strikethrough task due-date if task checked complete */
    text-decoration: line-through double hsl(0, 0%, 0%) from-font;
}

.task-utility .task-status {
    display: flex;
    gap: 5px;
}

.task-complete + .project-task-container .task-status > div:first-child {
    /* Show active icon to indicate task is unchecked & pending */
    background-image: url("./assets/icons/active.svg");
}

.task-complete:checked + .project-task-container .task-status > div:first-child {
    /* Show inactive icon to indicate task is checked & complete */
    background-image: url("./assets/icons/inactive.svg");
}

.task-utility .task-status > div:first-child {
    background-repeat: no-repeat;
    background-size: contain;
    height: 1.5em;
    aspect-ratio: 1 / 1;
}

.task-utility .task-status > div:last-child {
    display: grid;
    place-content: start center;
}

.task-complete + .project-task-container .task-status > div:last-child::after {
    content: "Active";
}

.task-complete:checked + .project-task-container .task-status > div:last-child::after {
    content: "Complete";
    width: 100%;
}

.task-complete:checked + .project-task-container .sideline {
    background-color: hsl(0, 0%, 36%);
}

.task-complete:checked + .project-task-container {
    background-color: hsla(0, 0%, 100%, 0.592);
}

main > .my-projects {
    height: 100%;

    display: grid;
    grid-template: auto 1fr / 1fr;
    grid-template-areas: 'my-projects-header' 'my-projects-main';
}

main > .my-projects > .my-projects-header {
    grid-area: my-projects-header;

    display: flex;
    justify-content: flex-start;
    
    padding-top: 38px;
    padding-left: 11%;

    font-size: 1.5rem;

    box-shadow: 2.7px 5.3px 14.4px rgba(0, 0, 0, 0.34),
                11px 22px 85px rgba(0, 0, 0, 0.16);
    z-index: 1;
}

.project-list {
    grid-area: my-projects-main;

    background-color: hsl(214, 32%, 91%);

    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: flex-start;

    padding: 38px;
}

.project-list .add-project {
    display: flex;
    align-items: center;
    gap: 11px;

    padding: 25px 38px;

    width: 100%;
}

.project-list .add-project > img {
    filter: invert(100%);
}

.project-list .project {
    display: grid;
    grid-template-columns: 1fr auto;
    align-items: center;

    padding: 16px 38px;
    width: 100%;
}

.project-list .project:first-child {
    border-top-left-radius: 25px;
    border-top-right-radius: 25px;
}

.project-list .project:has(+ .add-project) {
    border-bottom-left-radius: 25px;
    border-bottom-right-radius: 25px;
}

.project-list .project:nth-child(even) {
    background-color: hsl(0, 16%, 85%);
}

.project-list .project:nth-child(even):hover {
    background-color: hsla(0, 16%, 85%, 0.637);
    filter: brightness(58%);
}

.project-list .project:nth-child(odd) {
    background-color: hsl(0, 0%, 100%);
}

.project-list .project:nth-child(odd):hover {
    background-color: hsl(0, 0%, 100%, 0.637);
    filter: brightness(58%);
}

.project-list .project > div:first-child {
    font-weight: 800;
    cursor: pointer;
}

.project-list .project > div:last-child {
    display: flex;
    align-items: center;
    gap: 25px;
}

.project-list .project button {
    background-size: 1.5em 1.5em;
    background-position: center;
    background-repeat: no-repeat;
    filter: invert(100%);

    height: 2.25em;
    aspect-ratio: 1 / 1;
    border-radius: 16px;
}

.project-list .project button:hover {
    background-color: hsl(258, 75%, 43%);
    filter: invert(0%);
}

.project-list .edit-project {
    background-image: url("./assets/icons/edit-fill0.svg");
}

.project-list .delete-project {
    background-image: url("./assets/icons/delete-fill0.svg");
}

/* Styling Modal */
dialog {
    margin: auto;
    border: none;
    width: clamp(450px, 38%, 75ch);

    border-radius: 25px;
    box-shadow: 2.7px 5.3px 14.4px rgba(0, 0, 0, 0.34),
                11px 22px 85px rgba(0, 0, 0, 0.16);
}

dialog::backdrop {
    background-color: hsla(0, 0%, 0%, 0.385);
}

dialog textarea {
    resize: none;
    border: none;
    outline: none;
}

.add-task-modal > form, .edit-task-modal > form {
    display: grid;
    grid-template-rows: 1fr 1.8fr repeat(3, 0.4fr);
    gap: 25px;
}

.add-task-modal .form-element, .edit-task-modal .form-element {
    display: flex;
    flex-direction: column;
    gap: 5px;
}

textarea {
    height: 100%;
    width: 100%;
    overflow: auto;
    text-align: justify;
}

.add-task-modal #task-name, 
.add-task-modal #task-name::placeholder, 
.edit-task-modal #task-name {
    font-weight: 800;
    font-size: 1.5rem;
}

.add-task-modal #description, .edit-task-modal #description {
    font-size: 1rem;
}

.add-task-modal label, .edit-task-modal label {
    font-size: 1rem;
    font-weight: 800;
}

dialog button {
    border-radius: 16px;
}

dialog button:not(:disabled):hover {
    filter: brightness(68%);
}

.add-task-modal .submit-task {
    background-color: hsl(32, 100%, 50%);
    color: hsl(0, 0%, 100%);
}

.add-task-modal .submit-task:disabled {
    background-color: hsla(32, 100%, 50%, 0.664);
    cursor: not-allowed;
}

.cancel-btn {
    background-color: hsl(0, 0%, 78%);
}

.add-project-modal > form, .edit-project-modal > form {
    display: grid;
    grid-template-rows: 2fr repeat(2, 0.2fr);
    gap: 25px;
}

dialog input:not(.mark-complete) {
    width: 100%;
    height: 100%;
    overflow: auto;
    text-align: justify;
}

.add-project-modal #project-name::placeholder, 
.add-project-modal #project-name, 
.edit-project-modal #project-name {
    font-weight: 800;
    font-size: 1.5rem;
}

.add-project-modal #project-name,
.edit-project-modal #project-name {
    outline: none;
    border: none;
}

.add-project-modal .submit-project {
    background-color: hsl(32, 100%, 50%);
    color: hsl(0, 0%, 100%);
}

.add-project-modal .submit-project:disabled {
    background-color: hsla(32, 100%, 50%, 0.664);
    cursor: not-allowed;
}

.modify-btn {
    background-color: hsl(78, 82%, 52%);
}

.modify-btn:disabled {
    background-color: hsl(78, 82%, 52%, 0.664);
    cursor: not-allowed;
}

.task-display {
    display: grid;
    grid-template: auto 1fr / auto 2fr 1fr;
    grid-template-areas: 'task-complete-checkbox body btns' 
                        '. body details';
    gap: 25px 16px;

    height: min(650px, 65vh);
    padding: 35px 32px 35px 16px;

    position: relative;
}

.task-display > .close-btn {
    position: absolute;
    top: 1px;
    right: 1px;

    background-image: url("./assets/icons/close.svg");
}

.task-display > .close-btn:hover {
    background-color: hsl(0, 100%, 50%);
    filter: invert(0%);
}

.task-display > .task-complete {
    grid-area: task-complete-checkbox;

    height: calc(1em * 1.5);
    aspect-ratio: 1 / 1;
}

.task-display > .task-body {
    grid-area: body;

    display: grid;
    grid-template-rows: auto 1fr;
}

.task-display > .btns {
    grid-area: btns;

    display: flex;
    justify-content: center;
    align-items: center;
    gap: 25px;
}

.task-display > .task-details {
    grid-area: details;
    font-size: 1rem;

    padding-top: 16px;

    display: flex;
    flex-direction: column;
    gap: 35px;
}

.task-complete:checked + .task-body > div,
.task-complete:checked ~ .task-details .date {
    text-decoration: line-through double hsl(0, 0%, 0%) from-font;
}

.task-display .task-details > .detail {
    display: flex;
    flex-direction: column;
    gap: 8px;
}

.task-display .task-body > div:first-child {
    font-weight: 800;
    font-size: 1.5rem;
}

.task-details > .detail > div:first-child {
    font-weight: 800;
}

.task-display .task-body > div:nth-child(2) {
    font-size: 1rem;
    overflow: auto;
}

@supports selector(::-webkit-scrollbar) {
    .task-display .task-body > div:nth-child(2)::-webkit-scrollbar {
        width: 5px;
    }
    
    .task-display .task-body>div:nth-child(2)::-webkit-scrollbar-track {
        background-color: hsl(0, 0%, 78%);
        border-radius: 100vh;
    }
    
    .task-display .task-body>div:nth-child(2)::-webkit-scrollbar-thumb {
        background-color: hsl(0, 0%, 0%);
        border-radius: 100vh;
    }
}

.task-display .edit-task {
    background-image: url("./assets/icons/edit-fill0.svg");
}

.task-display .delete-task {
    background-image: url("./assets/icons/delete-fill0.svg");
}

.task-display > .close-btn, 
.task-display .btns > * {
    background-repeat: no-repeat;
    background-size: 1.5em;
    background-position: center;
    height: 2em;
    aspect-ratio: 1 / 1;
    filter: invert(100%);
}

.task-display .btns > *:hover {
    background-color: black;
    filter: invert(0%);
}

.task-display .priority-flag {
    height: 2em;
    width: 2em;
    
    display: grid;
    place-content: center;
}

.task-display .priority-flag::before {
    content: "";
    width: 1.5em;
    height: 1.5em;
    clip-path: polygon(38% 26%, 80% 50%, 12% 51%, 12% 100%, 0 100%, 0 0, 80% 0);
}

.priority-flag#maximum::before {
    background-color: var(--maximum-priority);
}

.priority-flag#high::before {
    background-color: var(--high-priority);
}

.priority-flag#medium::before {
    background-color: var(--medium-priority);
}

.priority-flag#low::before {
    background-color: var(--low-priority);
}

.priority-flag#minimum::before {
    background-color: var(--minimum-priority);
}

.task-display .priority-heading + div,
.task-display .status-heading + div {
    display: flex;
    align-items: center;
    gap: 4px;
}

.task-display .status {
    display: grid;
    place-content: start center;
}

.task-display .status::before {
    content: "Active";
}

.task-display .status-icon {
    background-image: url("./assets/icons/active.svg");
    background-size: contain;
    background-repeat: no-repeat;
    height: 1.5em;
    aspect-ratio: 1 / 1;
}

.task-complete:checked ~ .task-details .status::before {
    content: "Complete";
}

.task-complete:checked ~ .task-details .status-icon {
    background-image: url("./assets/icons/inactive.svg");
}

dialog:has( .task-complete:checked) {
    background-color: hsl(0, 0%, 89%);
}

/* Tooltip Styling */
.tooltip {
    visibility: hidden;
    position: absolute;
    z-index: 2;
    bottom: -40px;

    display: grid;
    place-content: center;
}

.tooltip::before {
    border-radius: 16px;
    width: fit-content;
    padding: 8px 11px;
    background-color: hsl(0, 0%, 0%);
    color: hsl(0, 0%, 100%);
    font-size: 0.8rem;
}

.project-heading button > .tooltip::before,
.task-utility button > .tooltip::before {
    background-color: black;
    filter: invert(100%);
}

.edit-task,
.delete-task,
.open-task,
.edit-project,
.delete-project,
.card-btns > button,
.sidebar-toggle {
    position: relative;
}

.sidebar-toggle .tooltip {
    bottom: -95px;
}

.edit-task:hover > .tooltip,
.delete-task:hover > .tooltip,
.open-task:hover > .tooltip,
.edit-project:hover > .tooltip,
.delete-project:hover > .tooltip,
.card-btns > button:hover > .tooltip,
#sidebar-btn + .tooltip {
    visibility: visible;
}

.edit-task:hover > .tooltip::before,
.card-edit-btn:hover > .tooltip::before {
    content: "Edit Task";
}

.delete-task:hover > .tooltip::before,
.card-delete-btn:hover > .tooltip::before {
    content: "Delete Task";
}

.open-task:hover > .tooltip::before,
.card-open-btn:hover > .tooltip::before {
    content: "Open Task";
}

.edit-project:hover > .tooltip::before {
    content: "Edit Project";
}

.delete-project:hover > .tooltip::before {
    content: "Delete Project";
}

.card-mark-btn:hover > .tooltip::before {
    content: "Mark Complete";
}

#sidebar-btn:hover + .tooltip::before {
    content: "Close Dashboard";
}

#sidebar-btn:checked:hover + .tooltip::before {
    content: "Open Dashboard";
}

